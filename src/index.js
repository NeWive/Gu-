import React from 'react';
import ReactDom from 'react-dom';
import {BrowserRouter} from 'react-router-dom';
import App from './App';
import {createStore} from "redux";
import {Provider} from "react-redux";
import { reducer } from "./config/redux.config";
import './init.css';

// const initState = {
//     motive: false,
//     isPortalOn: false,
//     phoneNumber: '',
//     major: '',
//     email: '',
//     ps: '',
//     validateCode: '',
//     zeitgeistDetail: false,
//     worksDetail: false,
//     departmentMotionIndex: 0,
//     isDepartmentSelMotive: false,//控制状态
//     memberMotionIndex: 0,
//     isMemberSelMotive: false,
//     isCoverMotive: false,//Cover挂载完成后设置为true,
//     isMemberCoverMotive: false,
//     isHistoryRequesting: false,
//     historyIndex: 0,
//     isHistoryArrowSettled: true,//当为true的时候isHistoryRequesting才能为true
//     isWorksCoverOn: false,
//     isWorksCoverMotive: false,
// };
//
// const reducers = {
//     'SET_IS_WORKS_COVER_MOTIVE': (state, action) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: action.value,
//     }),
//     'SET_IS_WORKS_COVER_ON': (state, action) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: action.value,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_HISTORY_INDEX': (state, action) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: action.value,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_IS_HISTORY_ARROW_SETTLED': (state, action) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: action.value,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_IS_HISTORY_REQUESTING': (state, action) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: action.value,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_IS_MEMBER_COVER_MOTIVE': (state) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: !state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_MEMBER_MOTION_INDEX': (state, action) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: true,
//         memberMotionIndex: action.value,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_IS_MEMBER_SEL_MOTIVE': (state) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: false,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_IS_COVER_MOTIVE': (state) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: !state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_IS_DEPARTMENT_SEL_MOTIVE': (state) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: false,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_DEPARTMENT_MOTION_INDEX': (state, action) => ({
//         isPortalOn: state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: true,
//         departmentMotionIndex: action.value,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'OPERATING_PORTAL': (state) => ({
//         isPortalOn: !state.isPortalOn,
//         motive: state.motive,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverOpen: state.isCoverOpen,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_MOTIVE': (state) => ({
//         motive: !state.motive,
//         isPortalOn: state.isPortalOn,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_PHONE_NUMBER': (state, action) => ({
//         motive: state.motive,
//         isPortalOn: state.isPortalOn,
//         phoneNumber: action.value,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_MAJOR': (state, action) => ({
//         motive: state.motive,
//         isPortalOn: state.isPortalOn,
//         phoneNumber: state.phoneNumber,
//         major: action.value,
//         email: state.email,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_EMAIL': (state, action) => ({
//         motive: state.motive,
//         isPortalOn: state.isPortalOn,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: action.value,
//         ps: state.ps,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_PS': (state, action) => ({
//         motive: state.motive,
//         isPortalOn: state.isPortalOn,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: action.value,
//         validateCode: state.validateCode,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     }),
//     'SET_VALIDATE_CODE': (state, action) => ({
//         motive: state.motive,
//         isPortalOn: state.isPortalOn,
//         phoneNumber: state.phoneNumber,
//         major: state.major,
//         email: state.email,
//         ps: state.ps,
//         validateCode: action.value,
//         isDepartmentSelMotive: state.isDepartmentSelMotive,
//         departmentMotionIndex: state.departmentMotionIndex,
//         isCoverMotive: state.isCoverMotive,
//         isMemberSelMotive: state.isMemberSelMotive,
//         memberMotionIndex: state.memberMotionIndex,
//         isMemberCoverMotive: state.isMemberCoverMotive,
//         isHistoryRequesting: state.isHistoryRequesting,
//         historyIndex: state.historyIndex,
//         isHistoryArrowSettled: state.isHistoryArrowSettled,
//         isWorksCoverOn: state.isWorksCoverOn,
//         isWorksCoverMotive: state.isWorksCoverMotive,
//     })
// };
//
// const reducer = (state = initState, action) => {
//     console.log(`action: ${action.type}, value: ${action.value}`);
//     return reducers[action.type] ? (reducers[action.type])(state, action) : state;
// };

const store = createStore(reducer);
ReactDom.render(
    <BrowserRouter>
        <Provider store={store}>
            <App/>
        </Provider>
    </BrowserRouter>,
    document.getElementById(`root`)
);
// const initState = {
//     count: 0
// };
//
// const recducers = {
//     'INCREMENT': (state) => ({ count: state.count + 1 }),
//     'DECREMENT': (state) => ({ count: state.count - 1 }),
//     'RESET': () => ({ count: 0 }),
// };
//
// const reducer = (state = initState, action) => {
//     console.log('reducer', state, action);
//     return recducers[action.type] ? (recducers[action.type])(state) : state
// };
//
// const store = createStore(reducer);
//
// store.dispatch({ type: "INCREMENT" });
// store.dispatch({ type: "INCREMENT" });
// store.dispatch({ type: "DECREMENT" });
//
// ReactDom.render(
//     <Provider store={store}>
//         <Counter/>
//     </Provider>,
//     document.getElementById('root')
// );